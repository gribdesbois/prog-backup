.quote {
    @include mobile-only {
        opacity:0.2;
    }
    text-align: right;
    font-size: 3rem;
    font-weight: 900;
    font-style: italic;
    color: $colour-accent;
    margin: 2rem $layout-margin ($layout-margin)*-0.5 $layout-margin;
    strong {
        color: $colour-primary;
    }
}

.proj-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);

    grid-column-gap: $grid-gutter;
    @include mobile-only
    {
        display: block;
    }
}

.proj-prev{
    $self: &;
    color: $colour-white;
    margin-bottom: $grid-gutter;
    overflow: hidden;
    &__image {
        margin: 0;
        opacity: .2;
        @include img-ratio;
    }
    &__heading {
        font-size: 4rem;
        padding-left: 2.5rem;
        margin: 0;
        line-height: 6rem;
    }
    &__byline {
        padding-left: 2.5rem;
        font-size: 1.66rem;
    }
    &:hover {
        cursor: pointer;
        & > #{$self}__heading {
            background: $colour-primary;
            color: $colour-secondary;
        }
        & > #{$self}__image {
            opacity: 1;
        }
    }
}
.btn {
    &:hover + .box {
        transform: scale(1);
        span {
            transform: translateY(0);
        }
    }
}

.box {
    transform: scale(0.1);
    background: red;
    transition: transform 330ms ease-in-out;
    overflow: hidden;
    span {
        display: inline-block;
        transform: translateY(250%);
        transition: transform 280ms ease-out 50ms; 
    }
}

.box2 {
    
    &--perspective75px {
        background: $cd-secondary;
        color: $cd-danger;
        transform: perspective(75px) rotateX(45deg);
    }
    &--perspective150px {
        background: complement($cd-secondary);
        color: $cd-danger;
        transform: perspective(150px) rotateX(45deg);
    }
    &--perspective300px {
        background: $cd-txt;
        transform: perspective(300px) rotateX(45deg);
    }
}

.btn {
    &:hover + .boxes {
        & > .boxes--rotDegrees {
            transform: rotate(0deg);
        }
        & > .boxes--rotTurns {
            transform: rotate(0turn);
        }
    }
}

.boxes {
    &--rotDegrees {
        background: green;
        transform: rotate(-360deg);
        transition: all 5000ms ease-in-out;
    }
    &--rotTurns {
        background: rgb(136, 6, 28);
        transform: rotate(1turn);
        transition: all 5000ms ease-in-out;
    }
}